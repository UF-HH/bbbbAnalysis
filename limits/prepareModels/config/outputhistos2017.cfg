[configuration]

# directory='Histos2017'
directory = '/uscms/home/guerrero/nobackup/Run2/HH2020/Spring/CMSSW_10_2_13/src/bbbbAnalysis/MyHistos/Histos2017'

processes=["DATA","MODEL","ggHH_kl_1_kt_1","ggHH_kl_0_kt_1","ggHH_kl_5_kt_1","qqHH_CV_1_C2V_1_kl_1","qqHH_CV_1_C2V_2_kl_1","qqHH_CV_1_C2V_1_kl_2","qqHH_CV_1_C2V_1_kl_0","qqHH_CV_0p5_C2V_1_kl_1","qqHH_CV_1p5_C2V_1_kl_1"]

datas = ["DATA"]

sigs  = ["ggHH_kl_1_kt_1","ggHH_kl_0_kt_1","ggHH_kl_5_kt_1","qqHH_CV_1_C2V_1_kl_1","qqHH_CV_1_C2V_2_kl_1","qqHH_CV_1_C2V_1_kl_2","qqHH_CV_1_C2V_1_kl_0","qqHH_CV_0p5_C2V_1_kl_1","qqHH_CV_1p5_C2V_1_kl_1"]

bkgs  = ['MODEL']

categandobs = [["GGFcateg1","GGFMVA1"],["GGFcateg2","GGFMVA2"],["VBFcateg1","HH_m_1"],["VBFcateg2","HH_m_2"]]

combinations = [["GGFcateg1","GGFcateg2"],["VBFcateg1","VBFcateg2"],["GGFcateg1","GGFcateg2","VBFcateg1","VBFcateg2"]]

folder='physicsmodel2017'

dataset='2017'

datacardname='datacard_2017'

replacements = {
    'DATA'                       : 'data_obs',
    'ggHH_kl_1_kt_1'             : 'ggHH_kl_1_kt_1_hbbhbb',
    'ggHH_kl_0_kt_1'             : 'ggHH_kl_0_kt_1_hbbhbb',
    'ggHH_kl_5_kt_1'             : 'ggHH_kl_5_kt_1_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_1'       : 'qqHH_CV_1_C2V_1_kl_1_hbbhbb',
    'qqHH_CV_1_C2V_2_kl_1'       : 'qqHH_CV_1_C2V_2_kl_1_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_2'       : 'qqHH_CV_1_C2V_1_kl_2_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_0'       : 'qqHH_CV_1_C2V_1_kl_0_hbbhbb',
    'qqHH_CV_0p5_C2V_1_kl_1'     : 'qqHH_CV_0p5_C2V_1_kl_1_hbbhbb',
    'qqHH_CV_1p5_C2V_1_kl_1'     : 'qqHH_CV_1p5_C2V_1_kl_1_hbbhbb'}


[systematics]

### specify name of systematic, [directions], read type, optional renaming, 
##
## read type : how to fetch the histogram. Predefined:
## - wsyst     (for alternative weights, appended at the end of the histogram name)
## - altsample (for alternative sample, that modifies the name of the process)
## otherwise you can pass a string to call f.Get() that can be formatted in python with '{sample} {selection} {variable} {syst} {direction}'
## - wsyst_nodir will just look for the name with {systematics} and no {direction} within (mostly useful for debug). The list of direction must thus be [None]

## to not parse systematics, just pass an empty list
syst_list = [
    ['PUWeight' ,                  ['up', 'down'], 'wsyst',      'CMS_PU'             ],
    ['bTagScaleFactor_bJets' ,     ['up', 'down'], 'wsyst',      'CMS_eff_b_b_2017'   ],
    ['bTagScaleFactor_cJets' ,     ['up', 'down'], 'wsyst',      'CMS_eff_b_c_2017'   ],
    ['bTagScaleFactor_lightJets' , ['up', 'down'], 'wsyst',      'CMS_eff_b_udsg_2017'],
    ###
    ['L1PreFiringWeight' ,         ['Up', 'Dn'],   'wsyst',      'CMS_l1prefiring_2017'],
    ###
    ['jer',                        ['up', 'down'], 'altsample',  'CMS_res_j'],
    ['bjer',                       ['up', 'down'], 'altsample',  'CMS_res_j_breg'],
    ###
    ['AbsoluteMPFBias',            ['up', 'down'], 'altsample',  'CMS_scale_j_AbsoluteMPFBias' ],
    ['AbsoluteScale',              ['up', 'down'], 'altsample',  'CMS_scale_j_AbsoluteScale'   ],
    ['AbsoluteStat',               ['up', 'down'], 'altsample',  'CMS_scale_j_AbsoluteStat'    ],
    ['FlavorQCD',                  ['up', 'down'], 'altsample',  'CMS_scale_j_FlavorQCD'       ],
    ['Fragmentation',              ['up', 'down'], 'altsample',  'CMS_scale_j_Fragmentation'   ],
    ['PileUpDataMC',               ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpDataMC'    ],
    ['PileUpPtBB',                 ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtBB'      ],
    ['PileUpPtEC1',                ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtEC1'     ],
    ['PileUpPtEC2',                ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtEC2'     ],
    ['PileUpPtHF',                 ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtHF'      ],
    ['PileUpPtRef',                ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtRef'     ],
    ['RelativeFSR',                ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeFSR'     ],
    ['RelativeJEREC1',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeJEREC1'  ],
    ['RelativeJEREC2',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeJEREC2'  ],
    ['RelativeJERHF',              ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeJERHF'   ],
    ['RelativePtBB',               ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtBB'    ],
    ['RelativePtEC1',              ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtEC1'   ],
    ['RelativePtEC2',              ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtEC2'   ],
    ['RelativePtHF',               ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtHF'    ],
    ['RelativeBal',                ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeBal'     ],
    ['RelativeSample',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeSample'  ],
    ['RelativeStatEC',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeStatEC'  ],
    ['RelativeStatFSR',            ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeStatFSR' ],
    ['RelativeStatHF',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeStatHF'  ],
    ['SinglePionECAL',             ['up', 'down'], 'altsample',  'CMS_scale_j_SinglePionECAL'  ],
    ['SinglePionHCAL',             ['up', 'down'], 'altsample',  'CMS_scale_j_SinglePionHCAL'  ],
    ['TimePtEta',                  ['up', 'down'], 'altsample',  'CMS_scale_j_TimePtEta'       ]]
    ###

## here define groups of histogram systematics to be combined into a single one
## read_as works as in the sys_list to access all the elements in the group, without the keyword {direction}
## 'combine' defines how the histos are combined
## 'quadrature' : square sum of the positive and negative deltas (separately)
## 'maxmin'     : min and max deviation from nominal

to_combine = [
    {
        'name'    : 'CMS_LHE_scale',
        'inputs'  : [
        'LHEScaleWeight_var0',  
        'LHEScaleWeight_var1',  
        'LHEScaleWeight_var2',   
        'LHEScaleWeight_var3',  
        'LHEScaleWeight_var4',  
        'LHEScaleWeight_var5',  
        'LHEScaleWeight_var6',   
        'LHEScaleWeight_var7',
        'LHEScaleWeight_var8',  
        'LHEScaleWeight_var9', 
        'LHEScaleWeight_var10',
        'LHEScaleWeight_var11',  
        'LHEScaleWeight_var12',   
        'LHEScaleWeight_var13',  
        'LHEScaleWeight_var14',  
        'LHEScaleWeight_var15',  
        'LHEScaleWeight_var16',   
        'LHEScaleWeight_var17',
        'LHEScaleWeight_var18',  
        'LHEScaleWeight_var19', 
        'LHEScaleWeight_var20',
        'LHEScaleWeight_var21',  
        'LHEScaleWeight_var22',   
        'LHEScaleWeight_var23',  
        'LHEScaleWeight_var24',  
        'LHEScaleWeight_var25',  
        'LHEScaleWeight_var26',   
        'LHEScaleWeight_var27',
        'LHEScaleWeight_var28',  
        'LHEScaleWeight_var29', 
        'LHEScaleWeight_var30',
        'LHEScaleWeight_var31',  
        'LHEScaleWeight_var32',   
        'LHEScaleWeight_var33',  
        'LHEScaleWeight_var34',  
        'LHEScaleWeight_var35',  
        'LHEScaleWeight_var36',   
        'LHEScaleWeight_var37',
        'LHEScaleWeight_var38',  
        'LHEScaleWeight_var39', 
        'LHEScaleWeight_var40',
        'LHEScaleWeight_var41',  
        'LHEScaleWeight_var42',   
        'LHEScaleWeight_var43',],
        'read_as' : 'wsyst',
        'combine' : 'maxmin'},
    {
        'name'    : 'CMS_PS_weights',
        'inputs'  : [
            'PSWeight_var0',
            'PSWeight_var1',
            'PSWeight_var2',
            'PSWeight_var3'],
        'read_as' : 'wsyst',
        'combine' : 'quadrature'},

#    {
#        'name'    : 'CMS_LHC_pdf',
#        'inputs'  : [
#        'LHEPdfWeight_var0',
#        'LHEPdfWeight_var1',
#        'LHEPdfWeight_var2',
#        'LHEPdfWeight_var3',
#        'LHEPdfWeight_var4',
#        'LHEPdfWeight_var5',
#        'LHEPdfWeight_var6',
#        'LHEPdfWeight_var7',
#        'LHEPdfWeight_var8',
#        'LHEPdfWeight_var9',
#        'LHEPdfWeight_var10',
#        'LHEPdfWeight_var11',
#        'LHEPdfWeight_var12',
#        'LHEPdfWeight_var13',
#        'LHEPdfWeight_var14',
#        'LHEPdfWeight_var15',
#        'LHEPdfWeight_var16',
#        'LHEPdfWeight_var17',
#        'LHEPdfWeight_var18',
#        'LHEPdfWeight_var19',
#        'LHEPdfWeight_var20',
#        'LHEPdfWeight_var21',
#        'LHEPdfWeight_var22',
#        'LHEPdfWeight_var23',
#        'LHEPdfWeight_var24',
#        'LHEPdfWeight_var25',
#        'LHEPdfWeight_var26',
#        'LHEPdfWeight_var27',
#        'LHEPdfWeight_var28',
#        'LHEPdfWeight_var29',
#        'LHEPdfWeight_var30',
#        'LHEPdfWeight_var31',
#        'LHEPdfWeight_var32',
#        'LHEPdfWeight_var33',
#        'LHEPdfWeight_var34',
#        'LHEPdfWeight_var35',
#        'LHEPdfWeight_var36',
#        'LHEPdfWeight_var37',
#        'LHEPdfWeight_var38',
#        'LHEPdfWeight_var39',
#        'LHEPdfWeight_var40',
#        'LHEPdfWeight_var41',
#        'LHEPdfWeight_var42',
#        'LHEPdfWeight_var43',
#        'LHEPdfWeight_var44',
#        'LHEPdfWeight_var45',
#        'LHEPdfWeight_var46',
#        'LHEPdfWeight_var47',
#        'LHEPdfWeight_var48',
#        'LHEPdfWeight_var49',
#        'LHEPdfWeight_var50',
#        'LHEPdfWeight_var51',
#        'LHEPdfWeight_var52',
#        'LHEPdfWeight_var53',
#        'LHEPdfWeight_var54',
#        'LHEPdfWeight_var55',
#        'LHEPdfWeight_var56',
#        'LHEPdfWeight_var57',
#        'LHEPdfWeight_var58',
#        'LHEPdfWeight_var59',
#        'LHEPdfWeight_var60',
#        'LHEPdfWeight_var61',
#        'LHEPdfWeight_var62',
#        'LHEPdfWeight_var63',
#        'LHEPdfWeight_var64',
#        'LHEPdfWeight_var65',
#        'LHEPdfWeight_var66',
#        'LHEPdfWeight_var67',
#        'LHEPdfWeight_var68',
#        'LHEPdfWeight_var69',
#        'LHEPdfWeight_var70',
#        'LHEPdfWeight_var71',
#        'LHEPdfWeight_var72',
#        'LHEPdfWeight_var73',
#        'LHEPdfWeight_var74',
#        'LHEPdfWeight_var75',
#        'LHEPdfWeight_var76',
#        'LHEPdfWeight_var77',
#        'LHEPdfWeight_var78',
#        'LHEPdfWeight_var79',
#        'LHEPdfWeight_var80',
#        'LHEPdfWeight_var81',
#        'LHEPdfWeight_var82',
#        'LHEPdfWeight_var83',
#        'LHEPdfWeight_var84',
#        'LHEPdfWeight_var85',
#        'LHEPdfWeight_var86',
#        'LHEPdfWeight_var87',
#        'LHEPdfWeight_var88',
#        'LHEPdfWeight_var89',
#        'LHEPdfWeight_var90',
#        'LHEPdfWeight_var91',
#        'LHEPdfWeight_var92',
#        'LHEPdfWeight_var93',
#        'LHEPdfWeight_var94',
#        'LHEPdfWeight_var95',
#        'LHEPdfWeight_var96',
#        'LHEPdfWeight_var97',
#        'LHEPdfWeight_var98',
#        'LHEPdfWeight_var99',
#        'LHEPdfWeight_var100',
#        'LHEPdfWeight_var101',
#        'LHEPdfWeight_var102',
#        'LHEPdfWeight_var103',],
#        'read_as' : 'wsyst',
#        'combine' : 'maxmin'}
        ]

#######################################################################################
############## list of the systematics that will be put in the datacard

## format : [type, (description1), (description2) ]
##           where (description) = (process affected, value, <optional : category affected>)
## if no <category affected> is passed, the uncertainty is applied to all categories

[datacard_systematics]

# background\
CMS_bkgval_GGFcateg1            = ['lnN' , ('MODEL*', '1.01', 'GGFcateg1')]
CMS_bkgval_GGFcateg2            = ['lnN' , ('MODEL*', '1.01', 'GGFcateg2')]
CMS_bkgval_VBFcateg1            = ['lnN' , ('MODEL*', '1.028', 'VBFcateg1')]
CMS_bkgval_VBFcateg2            = ['lnN' , ('MODEL*', '1.296', 'VBFcateg2')]
CMS_bkgtf_VBFcateg1             = ['lnN' , ('MODEL*', '1.023', 'VBFcateg1')]
CMS_bkgtf_VBFcateg2             = ['lnN' , ('MODEL*', '1.347', 'VBFcateg2')]


# signal standard
lumi_13TeV_2017              = ['lnN' , ('qqHH_CV_*', '1.023'), ('ggHH_kl_*', '1.023') ]
CMS_trigger_bbbb_2017        = ['lnN' , ('qqHH_CV_*', '1.10'),  ('ggHH_kl_*', '1.10') ]#

CMS_eff_b_b_2017             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_eff_b_c_2017             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_eff_b_udsg_2017          = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]#

CMS_l1prefiring_2017         = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]#

CMS_PU                       = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]#

CMS_LHE_scale                = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_PS_weights               = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_LHE_pdf                  = ['lnN' , ('qqHH_CV_*', '1.10'),  ('ggHH_kl_*', '1.10') ]#
#CMS_PS_dipolerecoil_GGFcateg  = ['lnN' , ('qqHH_CV_*', '1.06/0.90','GGFcateg1'), ('qqHH_CV_*', '0.94/1.10','GGFcateg2')]
#CMS_PS_dipolerecoil_VBFcateg  = ['lnN' , ('qqHH_CV_*', '1.09/0.98','VBFcateg1'), ('qqHH_CV_*', '0.91/1.02','VBFcateg2')]

### jet uncertainties
CMS_scale_j_AbsoluteMPFBias  = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_AbsoluteScale    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_AbsoluteStat     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_FlavorQCD        = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_Fragmentation    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpDataMC     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtBB       = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtEC1      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtEC2      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtHF       = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtRef      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeFSR      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeJEREC1   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeJEREC2   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeJERHF    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtBB     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtEC1    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtEC2    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtHF     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeBal      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeSample   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeStatEC   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeStatFSR  = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeStatHF   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_SinglePionECAL   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_SinglePionHCAL   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_TimePtEta        = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_res_j                    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_res_j_breg               = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

## theory uncertainties
QCDscale_ggHH                = ['lnN', ('ggHH_kl_*', '0.95/1.022')]
pdf_Higgs_gg                 = ['lnN', ('ggHH_kl_*', '1.03')]
mtop_ggHH                    = ['lnN', ('ggHH_kl_*', '1.026')]

QCDscale_qqHH                = ['lnN', ('qqHH_CV_*', '0.996/1.003')]
pdf_Higgs_qq                 = ['lnN', ('qqHH_CV_*', '1.021')]

BR_decay_hbbhbb              = ['lnN', ('qqHH_CV_*', '1.025'),  ('ggHH_kl_*', '1.025')]


[datacard_groups]
theory = ['QCDscale_ggHH', 'pdf_Higgs_gg', 'mtop_ggHH', 'QCDscale_qqHH', 'pdf_Higgs_qq', 'BR_decay_hbbhbb']
