# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists

#########################################################################
#########################################################################

[selections]
VBFcateg = (VBFEvent==1 && BDT>=0)
GGFcateg = !(VBFEvent==1&& BDT>=0)
HMR = TMath::Sqrt( (((H1rand_m-115)/50)*((H1rand_m-115)/50)) + (((H2rand_m-115)/50)*((H2rand_m-115)/50))  ) < 1 
CR = !(TMath::Sqrt( (((H1rand_m-115)/50)*((H1rand_m-115)/50)) + (((H2rand_m-115)/50)*((H2rand_m-115)/50))  ) < 1)
FULL = TMath::Sqrt( (((H1rand_m-115)/50)*((H1rand_m-115)/50)) + (((H2rand_m-115)/50)*((H2rand_m-115)/50))) >= 0
#########################################################################
#########################################################################
[selectionWeights]
VBFcateg = bTagScaleFactor_central,genWeight,PUWeight,XS
GGFcateg = bTagScaleFactor_central,genWeight,PUWeight,XS
#########################################################################
#########################################################################

[sampleWeights]

#########################################################################
#########################################################################

# define alternative weights to be tested instead of the nominal one
[systematics]

#########################################################################
#########################################################################

# write binning as ROOT declaration: nXbins, xmin, xmax
[histos]
H1_b1_pt            = 30, 0, 600
H1_b2_pt            = 30, 0, 600
H2_b1_pt            = 30, 0, 600
H2_b2_pt            = 30, 0, 600
HH_b1_pt            = 30, 0, 600
HH_b2_pt            = 30, 0, 600
HH_b3_pt            = 30, 0, 600
HH_b4_pt            = 30, 0, 600
JJ_j1_pt            = 30, 0, 600
JJ_j2_pt            = 30, 0, 600
H1_b1_eta           = 20, -5, 5
H1_b2_eta           = 20, -5, 5
H2_b1_eta           = 20, -5, 5
H2_b2_eta           = 20, -5, 5
HH_b1_eta           = 20, -5, 5
HH_b2_eta           = 20, -5, 5
HH_b3_eta           = 20, -5, 5
HH_b4_eta           = 20, -5, 5
HH_b1_deepCSV       = 25, 0, 1
HH_b2_deepCSV       = 25, 0, 1
HH_b3_deepCSV       = 25, 0, 1
HH_b4_deepCSV       = 25, 0, 1
H1_b1_deepCSV       = 25, 0, 1
H1_b2_deepCSV       = 25, 0, 1
H2_b1_deepCSV       = 25, 0, 1
H2_b2_deepCSV       = 25, 0, 1
JJ_j1_eta           = 24, -5, 5
JJ_j2_eta           = 24, -5, 5
JJ_j1_qgl           = 25, 0, 1
JJ_j2_qgl           = 25, 0, 1
JJ_j1_deepCSV       = 25, 0, 1
JJ_j2_deepCSV       = 25, 0, 1
HH_m                = 50, 0, 2500
H1_m                = 20, 50, 250
H2_m                = 20, 50, 250
H1rand_m            = 20, 50, 250
H2rand_m            = 20, 50, 250
JJ_m                = 25, 0, 7500
j1j2_deltaEta       = 20, 0, 10
b1j1_deltaPhi       = 25, 0, 4
b1b2_deltaPhi       = 25, 0, 4
VBFEvent            = 2,0,2
BDT                 = 42,-2.1,2.1 
H1_eta              = 24, -6, 6
H2_eta              = 24, -6, 6
H1_pt               = 30, 0, 600
H2_pt               = 30, 0, 600
JJ_eta              = 24, -6, 6
h1h2_deltaEta       = 20, 0, 10
h1j1_deltaR         = 20, 0, 10
h1j2_deltaR         = 20, 0, 10
h2j1_deltaR         = 20, 0, 10
h2j2_deltaR         = 20, 0, 10
j1etaj2eta          = 20, -20, 0
maxj1etaj2eta       = 10, 0, 5
H1_bb_deltaR        = 10, 0, 5
H2_bb_deltaR        = 10, 0, 5
H1_bb_deltaEta      = 10, 0, 5
H2_bb_deltaEta      = 10, 0, 5
H1_bb_deltaPhi      = 10, 0, 5
H2_bb_deltaPhi      = 10, 0, 5
HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0 = 2, 0, 2
nExtraJet = 16, 6, 22
# write binning as ROOT declaration: nXbins, xmin, xmax, nYbins, ymin, ymax
[histos2D]
H1rand_m:H2rand_m    = 300, 0, 300, 300, 0, 300
# user defined binning: if defined, overrides any definition in [histos]
[binning]
H1_b1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,550,800
H1_b2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,550,800
H2_b1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,550,800
H2_b2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,550,800
HH_b1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,800
HH_b2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,700,800
HH_b3_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,600,800
HH_b4_pt            = 0,25,50,75,100,125,150,175,200,225,250,800
JJ_j1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,800
JJ_j2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,800
HH_m                = 0,250,500,750,1000,1250,1500,1750,2000,2250,2500,3000,4000
JJ_m                = 0,250,500,750,1000,1250,1500,1750,2000,2250,2500,2750,3000,3250,3500,3750,4000,4250,4500,5000,6000,7000,8000