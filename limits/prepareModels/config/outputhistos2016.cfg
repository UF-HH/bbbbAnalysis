[configuration]

# directory='Histos2016'
directory = '/uscms/home/guerrero/nobackup/Run2/HH2020/Spring/CMSSW_10_2_13/src/bbbbAnalysis/MyLimitsHistos_New/Histos2016'

processes=["DATA","MODEL","ggHH_kl_1_kt_1_2016","ggHH_kl_5_kt_1_2016","ggHH_kl_2p45_kt_1_2016","qqHH_CV_1_C2V_1_kl_1_2016","qqHH_CV_1_C2V_2_kl_1_2016","qqHH_CV_1_C2V_1_kl_2_2016","qqHH_CV_1_C2V_1_kl_0_2016","qqHH_CV_1_C2V_0_kl_1_2016","qqHH_CV_1p5_C2V_1_kl_1_2016"]

datas = ["DATA"]

sigs  = ["ggHH_kl_1_kt_1_2016","ggHH_kl_5_kt_1_2016","ggHH_kl_2p45_kt_1_2016","qqHH_CV_1_C2V_1_kl_1_2016","qqHH_CV_1_C2V_2_kl_1_2016","qqHH_CV_1_C2V_1_kl_2_2016","qqHH_CV_1_C2V_1_kl_0_2016","qqHH_CV_1_C2V_0_kl_1_2016","qqHH_CV_1p5_C2V_1_kl_1_2016"]

bkgs  = ['MODEL']

categandobs = [["GGFcateg1","GGFMVA1"],["GGFcateg2","GGFMVA2"],["VBFcateg1","HH_m_1"],["VBFcateg2","HH_m_2"]]

combinations = [["GGFcateg1","GGFcateg2"],["VBFcateg1","VBFcateg2"],["GGFcateg1","GGFcateg2","VBFcateg1","VBFcateg2"]]

folder='physicsmodel2016'

dataset='2016'

datacardname='datacard_2016'

replacements = {
    'DATA'                            : 'data_obs',
    'ggHH_kl_1_kt_1_2016'             : 'ggHH_kl_1_kt_1_2016_hbbhbb',
    'ggHH_kl_5_kt_1_2016'             : 'ggHH_kl_5_kt_1_2016_hbbhbb',
    'ggHH_kl_2p45_kt_1_2016'          : 'ggHH_kl_2p45_kt_1_2016_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_1_2016'       : 'qqHH_CV_1_C2V_1_kl_1_2016_hbbhbb',
    'qqHH_CV_1_C2V_2_kl_1_2016'       : 'qqHH_CV_1_C2V_2_kl_1_2016_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_2_2016'       : 'qqHH_CV_1_C2V_1_kl_2_2016_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_0_2016'       : 'qqHH_CV_1_C2V_1_kl_0_2016_hbbhbb',
    'qqHH_CV_1_C2V_0_kl_1_2016'       : 'qqHH_CV_1_C2V_0_kl_1_2016_hbbhbb',
    'qqHH_CV_1p5_C2V_1_kl_1_2016'     : 'qqHH_CV_1p5_C2V_1_kl_1_2016_hbbhbb'}


[systematics]

### specify name of systematic, [directions], read type, optional renaming, 
##
## read type : how to fetch the histogram. Predefined:
## - wsyst     (for alternative weights, appended at the end of the histogram name)
## - altsample (for alternative sample, that modifies the name of the process)
## otherwise you can pass a string to call f.Get() that can be formatted in python with '{sample} {selection} {variable} {syst} {direction}'
## - wsyst_nodir will just look for the name with {systematics} and no {direction} within (mostly useful for debug). The list of direction must thus be [None]

## to not parse systematics, just pass an empty list
syst_list = [
    ['LHE_scale_VBF' ,             ['up', 'down'], 'wsyst',      'CMS_LHE_scale_VBF'  ],
    ['LHE_pdf_VBF' ,               ['up', 'down'], 'wsyst',      'CMS_LHE_pdf_VBF'    ],
    ###
    ['PUWeight' ,                  ['up', 'down'], 'wsyst',      'CMS_PU'             ],
    ['bTagScaleFactor_bJets' ,     ['up', 'down'], 'wsyst',      'CMS_eff_b_b_2016'   ],
    ['bTagScaleFactor_cJets' ,     ['up', 'down'], 'wsyst',      'CMS_eff_b_c_2016'   ],
    ['bTagScaleFactor_lightJets' , ['up', 'down'], 'wsyst',      'CMS_eff_b_udsg_2016'],
    ###
    ['triggerScaleFactor' ,       ['up', 'down'], 'wsyst',     'CMS_trigger_bbbb_2016'],
    ###
    ['L1PreFiringWeight' ,         ['Up', 'Dn'],   'wsyst',      'CMS_l1prefiring_2016'],
    ###
    ['jer',                        ['up', 'down'], 'altsample',  'CMS_res_j'],
    ['bjer',                       ['up', 'down'], 'altsample',  'CMS_res_j_breg'],
    ###
    ['Absolute',            ['up','down'], 'altsample', 'CMS_scale_j_Absolute'            ],
    ['Absolute_2016',       ['up','down'], 'altsample', 'CMS_scale_j_Absolute_2016'       ],
    ['BBEC1',               ['up','down'], 'altsample', 'CMS_scale_j_BBEC1'               ],
    ['BBEC1_2016',          ['up','down'], 'altsample', 'CMS_scale_j_BBEC1_2016'          ],
    ['EC2',                 ['up','down'], 'altsample', 'CMS_scale_j_EC2'                 ],
    ['EC2_2016',            ['up','down'], 'altsample', 'CMS_scale_j_EC2_2016'            ],
    ['FlavorQCD',           ['up','down'], 'altsample', 'CMS_scale_j_FlavorQCD'           ],
    ['HF',                  ['up','down'], 'altsample', 'CMS_scale_j_HF'                  ],
    ['HF_2016',             ['up','down'], 'altsample', 'CMS_scale_j_HF_2016'             ],
    ['RelativeBal',         ['up','down'], 'altsample', 'CMS_scale_j_RelativeBal'         ],
    ['RelativeSample_2016', ['up','down'], 'altsample', 'CMS_scale_j_RelativeSample_2016' ]
    ]
    ###

## here define groups of histogram systematics to be combined into a single one
## read_as works as in the sys_list to access all the elements in the group, without the keyword {direction}
## 'combine' defines how the histos are combined
## 'quadrature' : square sum of the positive and negative deltas (separately)
## 'maxmin'     : min and max deviation from nominal

to_combine = [
    {
        'name'    : 'CMS_LHE_scale',
        'inputs'  : [
        'LHEScaleWeight_var0',  
        'LHEScaleWeight_var1',  
        'LHEScaleWeight_var2',   
        'LHEScaleWeight_var3',  
        'LHEScaleWeight_var4',  
        'LHEScaleWeight_var5',  
        'LHEScaleWeight_var6',   
        'LHEScaleWeight_var7',
        'LHEScaleWeight_var8'],
        'read_as' : 'wsyst',
        'combine' : 'maxmin'},
    {
        'name'    : 'CMS_PS_weights',
        'inputs'  : [
            'PSWeight_var0',
            'PSWeight_var1',
            'PSWeight_var2',
            'PSWeight_var3'],
        'read_as' : 'wsyst',
        'combine' : 'quadrature'},
    {
        'name'    : 'CMS_LHE_pdf',
        'inputs'  : [
        'LHEPdfWeight_var0',
        'LHEPdfWeight_var1',
        'LHEPdfWeight_var2',
        'LHEPdfWeight_var3',
        'LHEPdfWeight_var4',
        'LHEPdfWeight_var5',
        'LHEPdfWeight_var6',
        'LHEPdfWeight_var7',
        'LHEPdfWeight_var8',
        'LHEPdfWeight_var9',
        'LHEPdfWeight_var10',
        'LHEPdfWeight_var11',
        'LHEPdfWeight_var12',
        'LHEPdfWeight_var13',
        'LHEPdfWeight_var14',
        'LHEPdfWeight_var15',
        'LHEPdfWeight_var16',
        'LHEPdfWeight_var17',
        'LHEPdfWeight_var18',
        'LHEPdfWeight_var19',
        'LHEPdfWeight_var20',
        'LHEPdfWeight_var21',
        'LHEPdfWeight_var22',
        'LHEPdfWeight_var23',
        'LHEPdfWeight_var24',
        'LHEPdfWeight_var25',
        'LHEPdfWeight_var26',
        'LHEPdfWeight_var27',
        'LHEPdfWeight_var28',
        'LHEPdfWeight_var29',
        'LHEPdfWeight_var30',
        'LHEPdfWeight_var31',
        'LHEPdfWeight_var32',
        'LHEPdfWeight_var33',
        'LHEPdfWeight_var34',
        'LHEPdfWeight_var35',
        'LHEPdfWeight_var36',
        'LHEPdfWeight_var37',
        'LHEPdfWeight_var38',
        'LHEPdfWeight_var39',
        'LHEPdfWeight_var40',
        'LHEPdfWeight_var41',
        'LHEPdfWeight_var42',
        'LHEPdfWeight_var43',
        'LHEPdfWeight_var44',
        'LHEPdfWeight_var45',
        'LHEPdfWeight_var46',
        'LHEPdfWeight_var47',
        'LHEPdfWeight_var48',
        'LHEPdfWeight_var49',
        'LHEPdfWeight_var50',
        'LHEPdfWeight_var51',
        'LHEPdfWeight_var52',
        'LHEPdfWeight_var53',
        'LHEPdfWeight_var54',
        'LHEPdfWeight_var55',
        'LHEPdfWeight_var56',
        'LHEPdfWeight_var57',
        'LHEPdfWeight_var58',
        'LHEPdfWeight_var59',
        'LHEPdfWeight_var60',
        'LHEPdfWeight_var61',
        'LHEPdfWeight_var62',
        'LHEPdfWeight_var63',
        'LHEPdfWeight_var64',
        'LHEPdfWeight_var65',
        'LHEPdfWeight_var66',
        'LHEPdfWeight_var67',
        'LHEPdfWeight_var68',
        'LHEPdfWeight_var69',
        'LHEPdfWeight_var70',
        'LHEPdfWeight_var71',
        'LHEPdfWeight_var72',
        'LHEPdfWeight_var73',
        'LHEPdfWeight_var74',
        'LHEPdfWeight_var75',
        'LHEPdfWeight_var76',
        'LHEPdfWeight_var77',
        'LHEPdfWeight_var78',
        'LHEPdfWeight_var79',
        'LHEPdfWeight_var80',
        'LHEPdfWeight_var81',
        'LHEPdfWeight_var82',
        'LHEPdfWeight_var83',
        'LHEPdfWeight_var84',
        'LHEPdfWeight_var85',
        'LHEPdfWeight_var86',
        'LHEPdfWeight_var87',
        'LHEPdfWeight_var88',
        'LHEPdfWeight_var89',
        'LHEPdfWeight_var90',
        'LHEPdfWeight_var91',
        'LHEPdfWeight_var92',
        'LHEPdfWeight_var93',
        'LHEPdfWeight_var94',
        'LHEPdfWeight_var95',
        'LHEPdfWeight_var96',
        'LHEPdfWeight_var97',
        'LHEPdfWeight_var98',
        'LHEPdfWeight_var99',
        'LHEPdfWeight_var100',
        'LHEPdfWeight_var101',
        'LHEPdfWeight_var102',
        'LHEPdfWeight_var103',],
        'read_as' : 'wsyst',
        'combine' : 'maxmin'}
        ]

#######################################################################################
############## list of the systematics that will be put in the datacard

## format : [type, (description1), (description2) ]
##           where (description) = (process affected, value, <optional : category affected>)
## if no <category affected> is passed, the uncertainty is applied to all categories

[datacard_systematics]

## background validation
CMS_bkgval_GGFcateg1_2016         = ['lnN' , ('MODEL*', '1.006', 'GGFcateg1')]
CMS_bkgval_GGFcateg2_2016         = ['lnN' , ('MODEL*', '1.001', 'GGFcateg2')]
CMS_bkgval_VBFcateg1_2016         = ['lnN' , ('MODEL*', '1.030', 'VBFcateg1')]
CMS_bkgval_VBFcateg2_2016         = ['lnN' , ('MODEL*', '1.295', 'VBFcateg2')]

## background transfer factor
CMS_bkgtf_GGFcateg1_2016          = ['lnN' , ('MODEL*', '1.011', 'GGFcateg1')]
CMS_bkgtf_GGFcateg2_2016          = ['lnN' , ('MODEL*', '1.008', 'GGFcateg2')]
CMS_bkgtf_VBFcateg1_2016          = ['lnN' , ('MODEL*', '1.032', 'VBFcateg1')]
CMS_bkgtf_VBFcateg2_2016          = ['lnN' , ('MODEL*', '1.317', 'VBFcateg2')]

# signal standard
lumi_13TeV_2016              = ['lnN' , ('qqHH_CV_*', '1.025'), ('ggHH_kl_*', '1.025') ]
CMS_trigger_bbbb_2016        = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_eff_b_b_2016             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_eff_b_c_2016             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_eff_b_udsg_2016          = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

CMS_l1prefiring_2016         = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

CMS_PU                       = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

CMS_LHE_scale                                = ['fromInput:lnN', ('ggHH_kl_*', None) ]
CMS_LHE_scale_VBF                            = ['lnN', ('qqHH_CV_1_C2V_0_kl_1_*','0.991/1.005','VBFcateg1'), ('qqHH_CV_1_C2V_2_kl_1_*','0.991/1.005','VBFcateg1'), ('qqHH_CV_1_C2V_1_kl_1_*','0.974/1.029','VBFcateg1'), ('qqHH_CV_1_C2V_1_kl_0_*','0.968/1.037','VBFcateg1'), ('qqHH_CV_1_C2V_1_kl_2_*','0.975/1.028','VBFcateg1'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.986/1.013','VBFcateg1'), ('qqHH_CV_1_C2V_0_kl_1_*','0.962/1.042','VBFcateg2'), ('qqHH_CV_1_C2V_2_kl_1_*','0.962/1.042','VBFcateg2'), ('qqHH_CV_1_C2V_1_kl_1_*','0.936/1.077','VBFcateg2'), ('qqHH_CV_1_C2V_1_kl_0_*','0.927/1.089','VBFcateg2'), ('qqHH_CV_1_C2V_1_kl_2_*','0.930/1.084','VBFcateg2'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.945/1.065','VBFcateg2'), ('qqHH_CV_1_C2V_0_kl_1_*','0.940/1.052','GGFcateg1'), ('qqHH_CV_1_C2V_2_kl_1_*','0.940/1.052','GGFcateg1'), ('qqHH_CV_1_C2V_1_kl_1_*','0.967/1.028','GGFcateg1'), ('qqHH_CV_1_C2V_1_kl_0_*','0.984/1.012','GGFcateg1'), ('qqHH_CV_1_C2V_1_kl_2_*','0.975/1.021','GGFcateg1'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.966/1.029','GGFcateg1'), ('qqHH_CV_1_C2V_0_kl_1_*','0.998/1.001','GGFcateg2'), ('qqHH_CV_1_C2V_2_kl_1_*','0.998/1.001','GGFcateg2'), ('qqHH_CV_1_C2V_1_kl_1_*','0.997/1.003','GGFcateg2'), ('qqHH_CV_1_C2V_1_kl_0_*','0.989/1.013','GGFcateg2'), ('qqHH_CV_1_C2V_1_kl_2_*','0.999/1.001','GGFcateg2'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.989/1.013','GGFcateg2')]

CMS_PS_weights                               = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

CMS_LHE_pdf                                  = ['fromInput:lnN', ('ggHH_kl_*', None)] 
CMS_LHE_pdf_VBF                              = ['lnN', ('qqHH_CV_1_C2V_0_kl_1_*','0.972/1.013','VBFcateg1'), ('qqHH_CV_1_C2V_1_kl_1_*',  '0.973/1.048','VBFcateg1'), ('qqHH_CV_1_C2V_2_kl_1_*',  '0.972/1.013','VBFcateg1'), ('qqHH_CV_1_C2V_1_kl_0_*',  '0.961/1.042','VBFcateg1'), ('qqHH_CV_1_C2V_1_kl_2_*','0.969/1.041','VBFcateg1'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.983/1.029','VBFcateg1'), ('qqHH_CV_1_C2V_0_kl_1_*','0.971/1.030','VBFcateg2'), ('qqHH_CV_1_C2V_1_kl_1_*','0.913/1.119','VBFcateg2'), ('qqHH_CV_1_C2V_2_kl_1_*','0.971/1.030','VBFcateg2'), ('qqHH_CV_1_C2V_1_kl_0_*','0.882/1.054','VBFcateg2'), ('qqHH_CV_1_C2V_1_kl_2_*','0.938/1.032','VBFcateg2'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.952/1.044','VBFcateg2'), ('qqHH_CV_1_C2V_0_kl_1_*','0.960/1.037','GGFcateg1'), ('qqHH_CV_1_C2V_1_kl_1_*',  '0.971/1.041','GGFcateg1'), ('qqHH_CV_1_C2V_2_kl_1_*','0.960/1.037','GGFcateg1'), ('qqHH_CV_1_C2V_1_kl_0_*', '0.977/1.020','GGFcateg1'), ('qqHH_CV_1_C2V_1_kl_2_*','0.965/1.018','GGFcateg1'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.970/1.034','GGFcateg1'), ('qqHH_CV_1_C2V_0_kl_1_*','0.995/1.012','GGFcateg2'), ('qqHH_CV_1_C2V_1_kl_1_*','0.984/1.041','GGFcateg2'), ('qqHH_CV_1_C2V_2_kl_1_*','0.995/1.012','GGFcateg2'), ('qqHH_CV_1_C2V_1_kl_0_*','0.986/1.035','GGFcateg2'), ('qqHH_CV_1_C2V_1_kl_2_*','0.972/1.027','GGFcateg2'), ('qqHH_CV_1p5_C2V_1_kl_1_*','0.988/1.012','GGFcateg2')]

CMS_PS_dipolerecoil = ['lnN' , ('qqHH_CV_*', '0.87/1.13','GGFcateg1'), ('qqHH_CV_*', '1.11/0.89','GGFcateg2'), ('qqHH_CV_*', '0.86/1.14','VBFcateg1'), ('qqHH_CV_*', '0.98/1.02','VBFcateg2')]


## jet uncertainties
CMS_scale_j_Absolute             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_Absolute_2016        = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_BBEC1                = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_BBEC1_2016           = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_EC2                  = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_EC2_2016             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_FlavorQCD            = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_HF                   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_HF_2016              = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeBal          = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeSample_2016  = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_res_j                        = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_res_j_breg                   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

## theory uncertainties
#QCDscale_ggHH                = ['lnN', ('ggHH_kl_*', '0.95/1.022')]
pdf_Higgs_gg                 = ['lnN', ('ggHH_kl_*', '1.03')]
mtop_ggHH                    = ['lnN', ('ggHH_kl_*', '1.026')]

QCDscale_qqHH                = ['lnN', ('qqHH_CV_*', '0.996/1.003')]
pdf_Higgs_qq                 = ['lnN', ('qqHH_CV_*', '1.021')]

BR_decay_hbbhbb              = ['lnN', ('qqHH_CV_*', '1.025'),  ('ggHH_kl_*', '1.025')]


[datacard_groups]
theory = ['pdf_Higgs_gg', 'mtop_ggHH', 'QCDscale_qqHH', 'pdf_Higgs_qq', 'BR_decay_hbbhbb']
