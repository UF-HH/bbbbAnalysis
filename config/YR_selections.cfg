# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists

[selections]

mass_cut = TMath::Sqrt( (H1_mass - 120)*(H1_mass - 120) + (H2_mass - 120)*(H2_mass - 120) ) < 40
baseline = H1_b1_pt > 45 && H1_b2_pt > 45 && H2_b1_pt > 45 && H2_b2_pt > 45
SR       = H1_pt > 0 ## a dummy selection, there are no SR here

## test the trigger effects
baseline50  = baseline , H1_b1_pt > 50 && H1_b2_pt > 50 && H2_b1_pt > 50 && H2_b2_pt > 50
baseline55  = baseline , H1_b1_pt > 55 && H1_b2_pt > 55 && H2_b1_pt > 55 && H2_b2_pt > 55
baseline60  = baseline , H1_b1_pt > 60 && H1_b2_pt > 60 && H2_b1_pt > 60 && H2_b2_pt > 60
baseline65  = baseline , H1_b1_pt > 65 && H1_b2_pt > 65 && H2_b1_pt > 65 && H2_b2_pt > 65
baseline70  = baseline , H1_b1_pt > 70 && H1_b2_pt > 70 && H2_b1_pt > 70 && H2_b2_pt > 70
baseline75  = baseline , H1_b1_pt > 75 && H1_b2_pt > 75 && H2_b1_pt > 75 && H2_b2_pt > 75
baseline80  = baseline , H1_b1_pt > 80 && H1_b2_pt > 80 && H2_b1_pt > 80 && H2_b2_pt > 80

## no extra leptons
lepveto       = n_mu_iso == 0           && n_ele_iso == 0
lepvetnoovrlp = n_mu_iso_nooverlap == 0 && n_ele_iso_nooverlap == 0

## composit selections
finalsel             = baseline, mass_cut
finalselnolep        = baseline, mass_cut, lepveto
finalselnolepnoovrlp = baseline, mass_cut, lepvetnoovrlp

# write binning as ROOT declaration: nbins, xmin, xmax
[histos]
BDTG_nomasscut = 50, -0.96, 0.98 # -0.95513082 .. 0.97940481
BDTG_4_masscut = 50, -0.85, 0.92# -0.83783847 .. 0.90874231
BDTG_6_masscut = 50, -0.9, 0.96 #-0.89403600 .. 0.95526785
BDTG_7_masscut = 50, -0.73, 0.89 # -0.72700280 .. 0.88366443
H1_b1_pt = 100, 0, 500
H1_b2_pt = 100, 0, 500
H2_b1_pt = 100, 0, 500
H2_b2_pt = 100, 0, 500
HH_mass  = 100, 250, 1250

# user defined binning: if defined, overrides any definition in [histos]
[binning]

## weights to be applied for a certain selections when calling Fill()
## multiple weights are passed as list and are multiplied together
## NOTE: no weight is applied for data (the simple Fill() is used)
[selectionWeights]
baseline = evt_weight, evt_scale