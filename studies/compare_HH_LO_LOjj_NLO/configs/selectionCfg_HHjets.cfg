# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists

#########################################################################
#########################################################################
[selections]
######################################################################### 
Baseline   = 1==1
IsoLepVeto = 1==1 #IsolatedMuon_Multiplicity==0 && IsolatedElectron_Multiplicity==0    
VBFcateg   =  (GGFKiller>=0.5 && VBFEvent==1) 
GGFcateg   = !(GGFKiller>=0.5 && VBFEvent==1) 
VBFcut1    = GGFKiller <  0.90
VBFcut2    = GGFKiller >= 0.90
GGFcut1    = HH_m < 400
GGFcut2    = !(HH_m < 400)
VBFevt     = VBFEvent==1
GGFevt     = !(VBFEvent==1)
Inclusive  = 1==1
VBFevtGGFKillercut   =  (VBFEvent==1 && GGFKiller>=0.5)
VBFevtNoGGFKillercut =  (VBFEvent==1 && GGFKiller<0.5)
CR_110 = TMath::Sqrt((H1_m-125)*(H1_m-125)+(H2_m-120)*(H2_m-120)) >= 25 && TMath::Sqrt((H1_m-125)*(H1_m-125)+(H2_m-120)*(H2_m-120)) <= 50
SR_110 = TMath::Sqrt((H1_m-125)*(H1_m-125)+(H2_m-120)*(H2_m-120)) < 25
CR_210 = TMath::Sqrt((H1_m-182)*(H1_m-182)+(H2_m-175)*(H2_m-175)) >= 25 && TMath::Sqrt((H1_m-182)*(H1_m-182)+(H2_m-175)*(H2_m-175)) <= 50
SR_210 = TMath::Sqrt((H1_m-182)*(H1_m-182)+(H2_m-175)*(H2_m-175)) < 25
3btags = nBtag==3
4btags = nBtag==4
Btag3_VBFcateg1_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut1, 3btags
Btag3_VBFcateg1_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut1, 3btags
Btag4_VBFcateg1_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut1, 4btags
Btag4_VBFcateg1_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut1, 4btags
Btag3_VBFcateg1_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut1, 3btags
Btag3_VBFcateg1_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut1, 3btags
Btag4_VBFcateg1_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut1, 4btags
Btag4_VBFcateg1_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut1, 4btags
Btag3_VBFcateg2_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut2, 3btags
Btag3_VBFcateg2_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut2, 3btags
Btag4_VBFcateg2_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut2, 4btags
Btag4_VBFcateg2_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut2, 4btags
Btag3_VBFcateg2_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut2, 3btags
Btag3_VBFcateg2_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut2, 3btags
Btag4_VBFcateg2_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut2, 4btags
Btag4_VBFcateg2_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut2, 4btags
Btag3_VBFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, 3btags
Btag3_VBFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, 3btags
Btag4_VBFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, 4btags
Btag4_VBFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, 4btags
Btag3_VBFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, 3btags
Btag3_VBFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, 3btags
Btag4_VBFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, 4btags
Btag4_VBFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, 4btags
Btag3_GGFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 3btags
Btag3_GGFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 3btags
Btag4_GGFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 4btags
Btag4_GGFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 4btags
Btag3_GGFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 3btags
Btag3_GGFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 3btags
Btag4_GGFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 4btags
Btag4_GGFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 4btags
Btag3_GGFcateg1_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 3btags, GGFcut1
Btag3_GGFcateg1_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 3btags, GGFcut1
Btag4_GGFcateg1_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 4btags, GGFcut1
Btag4_GGFcateg1_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 4btags, GGFcut1
Btag3_GGFcateg1_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 3btags, GGFcut1
Btag3_GGFcateg1_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 3btags, GGFcut1
Btag4_GGFcateg1_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 4btags, GGFcut1
Btag4_GGFcateg1_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 4btags, GGFcut1
Btag3_GGFcateg2_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 3btags, GGFcut2
Btag3_GGFcateg2_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 3btags, GGFcut2
Btag4_GGFcateg2_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 4btags, GGFcut2
Btag4_GGFcateg2_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 4btags, GGFcut2
Btag3_GGFcateg2_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 3btags, GGFcut2
Btag3_GGFcateg2_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 3btags, GGFcut2
Btag4_GGFcateg2_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 4btags, GGFcut2
Btag4_GGFcateg2_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 4btags, GGFcut2
Btag3_GGFcateg = Baseline,IsoLepVeto, GGFcateg, 3btags
Btag3_VBFcateg = Baseline,IsoLepVeto, VBFcateg, 3btags
Btag4_GGFcateg = Baseline,IsoLepVeto, GGFcateg, 4btags
Btag4_VBFcateg = Baseline,IsoLepVeto, VBFcateg, 4btags
Btag4_VBFpre   = Baseline,IsoLepVeto, 4btags, VBFevt
Btag3_VBFpre   = Baseline,IsoLepVeto, 3btags, VBFevt
Btag4_GGFpre   = Baseline,IsoLepVeto, 4btags, GGFevt
Btag3_GGFpre   = Baseline,IsoLepVeto, 3btags, GGFevt
Btag4          = Baseline,IsoLepVeto, 4btags
Btag3          = Baseline,IsoLepVeto, 3btags,
Btag4_SR_110      = Baseline,IsoLepVeto, 4btags, SR_110
Btag4_SR_110_VBF  = Baseline,IsoLepVeto, 4btags, SR_110, VBFevt
Preselection   = Baseline,IsoLepVeto
Histogram      = 1==1
Btag4_VBFpreGGFKillercut   = Baseline,IsoLepVeto, 4btags, VBFevtGGFKillercut
Btag4_VBFpreNoGGFKillercut = Baseline,IsoLepVeto, 4btags, VBFevtNoGGFKillercut
#########################################################################
[selectionWeights]
Baseline  =  genWeight, PUWeight, XS, bTagScaleFactor_central , LHEScaleWeight, PSWeight
Btag3_VBFcateg1_CR_110  = Weight_AnaVBF
Btag3_VBFcateg1_SR_110  = Weight_AnaVBF
Btag3_VBFcateg1_CR_210  = Weight_ValVBF
Btag3_VBFcateg1_SR_210  = Weight_ValVBF
Btag3_VBFcateg2_CR_110  = Weight_AnaVBF
Btag3_VBFcateg2_SR_110  = Weight_AnaVBF
Btag3_VBFcateg2_CR_210  = Weight_ValVBF
Btag3_VBFcateg2_SR_210  = Weight_ValVBF
Btag3_VBFcateg_CR_110   = Weight_AnaVBF
Btag3_VBFcateg_SR_110   = Weight_AnaVBF
Btag3_VBFcateg_CR_210   = Weight_ValVBF
Btag3_VBFcateg_SR_210   = Weight_ValVBF
Btag3_GGFcateg_CR_110   = Weight_AnaGGF
Btag3_GGFcateg_SR_110   = Weight_AnaGGF,Weight_AnaGGF_MVA
Btag3_GGFcateg_CR_210   = Weight_ValGGF
Btag3_GGFcateg_SR_210   = Weight_ValGGF
Btag3_GGFcateg1_CR_110  = Weight_AnaGGF1
Btag3_GGFcateg1_SR_110  = Weight_AnaGGF1,Weight_AnaGGF1_MVA
Btag3_GGFcateg1_CR_210  = Weight_ValGGF1
Btag3_GGFcateg1_SR_210  = Weight_ValGGF1
Btag3_GGFcateg2_CR_110  = Weight_AnaGGF2
Btag3_GGFcateg2_SR_110  = Weight_AnaGGF2,Weight_AnaGGF2_MVA
Btag3_GGFcateg2_CR_210  = Weight_ValGGF2
Btag3_GGFcateg2_SR_210  = Weight_ValGGF2
#########################################################################
#########################################################################
[sampleWeights]
ggHH_LO              = HH_reweight
GGHH4B_rew_kl_m_20   = HH_reweight
GGHH4B_rew_kl_m_19   = HH_reweight
GGHH4B_rew_kl_m_18   = HH_reweight
GGHH4B_rew_kl_m_17   = HH_reweight
GGHH4B_rew_kl_m_16   = HH_reweight
GGHH4B_rew_kl_m_15   = HH_reweight
GGHH4B_rew_kl_m_14   = HH_reweight
GGHH4B_rew_kl_m_13   = HH_reweight
GGHH4B_rew_kl_m_12   = HH_reweight
GGHH4B_rew_kl_m_11   = HH_reweight
GGHH4B_rew_kl_m_10   = HH_reweight
GGHH4B_rew_kl_m_9    = HH_reweight
GGHH4B_rew_kl_m_8    = HH_reweight
GGHH4B_rew_kl_m_7    = HH_reweight
GGHH4B_rew_kl_m_6    = HH_reweight
GGHH4B_rew_kl_m_5    = HH_reweight
GGHH4B_rew_kl_m_4    = HH_reweight
GGHH4B_rew_kl_m_3    = HH_reweight
GGHH4B_rew_kl_m_2    = HH_reweight
GGHH4B_rew_kl_m_1    = HH_reweight
GGHH4B_rew_kl_p_0    = HH_reweight
GGHH4B_rew_kl_p_1    = HH_reweight
GGHH4B_rew_kl_p_2    = HH_reweight
GGHH4B_rew_kl_p_3    = HH_reweight
GGHH4B_rew_kl_p_4    = HH_reweight
GGHH4B_rew_kl_p_5    = HH_reweight
GGHH4B_rew_kl_p_6    = HH_reweight
GGHH4B_rew_kl_p_7    = HH_reweight
GGHH4B_rew_kl_p_8    = HH_reweight
GGHH4B_rew_kl_p_9    = HH_reweight
GGHH4B_rew_kl_p_10   = HH_reweight
GGHH4B_rew_kl_p_11   = HH_reweight
GGHH4B_rew_kl_p_12   = HH_reweight
GGHH4B_rew_kl_p_13   = HH_reweight
GGHH4B_rew_kl_p_14   = HH_reweight
GGHH4B_rew_kl_p_15   = HH_reweight
GGHH4B_rew_kl_p_16   = HH_reweight
GGHH4B_rew_kl_p_17   = HH_reweight
GGHH4B_rew_kl_p_18   = HH_reweight
GGHH4B_rew_kl_p_19   = HH_reweight
GGHH4B_rew_kl_p_20   = HH_reweight

#########################################################################
#########################################################################
# define alternative weights to be tested instead of the nominal one
[systematics]
# bTagScaleFactor_central = bTagScaleFactor_bJets_up,bTagScaleFactor_bJets_down,bTagScaleFactor_cJets_up, bTagScaleFactor_cJets_down,bTagScaleFactor_lightJets_up,bTagScaleFactor_lightJets_down
# PUWeight                = pippoUp:PUWeight_up, pippoDown:PUWeight_down
LHEScaleWeight = LHEScaleWeight_var0, LHEScaleWeight_var1, LHEScaleWeight_var2, LHEScaleWeight_var3, LHEScaleWeight_var4, LHEScaleWeight_var5, LHEScaleWeight_var6, LHEScaleWeight_var7, LHEScaleWeight_var8
PSWeight       = PSWeight_var0, PSWeight_var1, PSWeight_var2, PSWeight_var3

#########################################################################
#########################################################################
# define alternative samples that encode a specific systematic

[defaultWeight]
LHEScaleWeight_var0 = 1
LHEScaleWeight_var1 = 1
LHEScaleWeight_var2 = 1
LHEScaleWeight_var3 = 1
LHEScaleWeight_var4 = 1
LHEScaleWeight_var5 = 1
LHEScaleWeight_var6 = 1
LHEScaleWeight_var7 = 1
LHEScaleWeight_var8 = 1

[altSamplesSystematics]

# groups of systematics that correspond to alternative samples
# a dedicated section of this cfg with the same name must exist to configure the alternative files
# group_list = JEC_var, JER_var


[JEC_var]

sources    = AbsoluteMPFBias

####, AbsoluteScale, AbsoluteStat, FlavorQCD, Fragmentation, PileUpDataMC, PileUpPtBB, PileUpPtEC1, PileUpPtEC2, PileUpPtHF, PileUpPtRef, RelativeFSR, RelativeJEREC1, RelativeJEREC2, RelativeJERHF, RelativePtBB, RelativePtEC1, RelativePtEC2, RelativePtHF, RelativeBal, RelativeSample, RelativeStatEC, RelativeStatFSR, RelativeStatHF, SinglePionECAL, SinglePionHCAL, TimePtEta
directions = up, down
apply_to   = ggHH_kl_0_kt_1,ggHH_kl_1_kt_1,ggHH_kl_2p45_kt_1,ggHH_kl_5_kt_1,qqHH_CV_1_C2V_1_kl_1,qqHH_CV_1_C2V_2_kl_1,qqHH_CV_1_C2V_1_kl_0,qqHH_CV_1_C2V_1_kl_2,qqHH_CV_0p5_C2V_1_kl_1,qqHH_CV_1p5_C2V_1_kl_1 

[JER_var]

sources    = jer, bjer
directions = up, down
apply_to   = ggHH_kl_0_kt_1,ggHH_kl_1_kt_1,ggHH_kl_2p45_kt_1,ggHH_kl_5_kt_1,qqHH_CV_1_C2V_1_kl_1,qqHH_CV_1_C2V_2_kl_1,qqHH_CV_1_C2V_1_kl_0,qqHH_CV_1_C2V_1_kl_2,qqHH_CV_0p5_C2V_1_kl_1,qqHH_CV_1p5_C2V_1_kl_1 


#########################################################################
#########################################################################
# write binning as ROOT declaration: nXbins, xmin, xmax
[histos]
HH_b1_pt            = 30, 0, 600
HH_b2_pt            = 30, 0, 600
HH_b3_pt            = 30, 0, 600
HH_b4_pt            = 30, 0, 600
JJ_j1_pt            = 30, 0, 600
JJ_j2_pt            = 30, 0, 600
HH_b1_eta           = 40, -5, 5
HH_b2_eta           = 40, -5, 5
HH_b3_eta           = 40, -5, 5
HH_b4_eta           = 40, -5, 5
JJ_j1_eta           = 40, -5, 5
JJ_j2_eta           = 40, -5, 5
JJ_j1_location      = 4, 0, 4
JJ_j2_location      = 4, 0, 4
HH_b1_deepCSV       = 10, 0, 1
HH_b2_deepCSV       = 10, 0, 1
HH_b3_deepCSV       = 10, 0, 1
HH_b4_deepJet       = 10, 0, 1
HH_btag_b1_deepJet  = 10, 0, 1
HH_btag_b2_deepJet  = 10, 0, 1
HH_btag_b3_deepJet  = 10, 0, 1
HH_btag_b4_deepJet  = 10, 0, 1
HH_btag_b3_bscore   = 40, 0, 1
HH_btag_b3_bres     = 40, 0, 1
JJ_j1_qgl           = 25, 0, 1
JJ_j2_qgl           = 25, 0, 1
HH_m                = 52, 200, 1500
HH_m_1              = 13, 200, 1500
HH_m_2              = 1,  0,  1500
H1_m                = 40, 50, 250
H2_m                = 40, 50, 250
H1rand_m            = 40, 50, 250
H2rand_m            = 40, 50, 250
JJ_m                = 160, 0, 8000
j1j2_deltaEta       = 40, 0,  10
VBFEvent            = 2,0,2
EventCount          = 2,0,2
VBFEventLocation    = 7,0,7
IsolatedMuon_Multiplicity      = 5,0,5
IsolatedElectron_Multiplicity  = 5,0,5
BDT1                = 30,-1.5,1.5 
BDT2                = 30,-1.5,1.5
BDT3                = 30,-1.5,1.5
H1_eta              = 24, -5, 5
H2_eta              = 24, -5, 5
H1_pt               = 20, 0, 1000
H2_pt               = 20, 0, 1000
H1rand_pt           = 20, 0, 1000
H2rand_pt           = 20, 0, 1000
JJ_eta              = 24, -6, 6
h1h2_deltaEta       = 40, 0, 10
h1h2_deltaPhi       =  7, 0, 3.5
h1j1_deltaR         = 20, 0, 10
h1j2_deltaR         = 20, 0, 10
h2j1_deltaR         = 20, 0, 10
h2j2_deltaR         = 20, 0, 10
j1etaj2eta          = 20, -20, 0
H1_bb_deltaR        = 40, 0, 5
H2_bb_deltaR        = 40, 0, 5
H1_bb_deltaPhi      = 5, 0, 5
H2_bb_deltaPhi      = 5, 0, 5
costh_HH_b1_ggfcm   = 40, -1,1
costh_HH_b2_ggfcm   = 40, -1,1
nJet                = 25, 0,25
nJet_ec             = 25, 0,25
nJet_hf             = 25, 0,25
nPVgood             = 100,0,100
HH_b1_jetId         = 10, 0,10
HH_b2_jetId         = 10, 0,10
HH_b3_jetId         = 10, 0,10
HH_b4_jetId         = 10, 0,10
JJ_j1_jetId         = 10, 0,10
JJ_j2_jetId         = 10, 0,10
HH_b1_puId          = 10, 0,10
HH_b2_puId          = 10, 0,10
HH_b3_puId          = 10, 0,10
HH_b4_puId          = 10, 0,10
JJ_j1_puId          = 10, 0,10
JJ_j2_puId          = 10, 0,10
j1j2_deltaPhi       = 30, -3.5, 3.5
HH_pt               = 30, 0, 300
h1h2_deltaR         = 30, 0, 6
hhjj_deltaPhi       = 30, -4, 4
hhjj_pt             = 30, 0, 300

# write binning as ROOT declaration: nXbins, xmin, xmax, nYbins, ymin, ymax
[histos2D]
BDT1:BDT2            = 20, -1,  1, 20, -1, 1
JJ_m:j1j2_deltaEta   =  160, 0, 8000,  50, 0,  10
H1rand_pt:H2rand_pt  = 30, 0, 600, 30, 0, 600
H1rand_m:H2rand_m    = 100, 0, 250, 100, 0, 250
H1_pt:H2_pt          = 30, 0, 600, 30, 0, 600
H1_m:H2_m            = 100, 0, 250, 100, 0, 250
BDT1:JJ_m            = 20, -1,  1, 160, 0, 8000

# user defined binning: if defined, overrides any definition in [histos]
[binning]
HH_b1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,725,750,775,800
HH_b2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,750,800
HH_b3_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,600,800
HH_b4_pt            = 0,25,50,75,100,125,150,175,200,225,250,800
JJ_j1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,800
JJ_j2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,800
nJet_ec             = 4,5,6,7,8,9,10,11,12,13
H1_pt               = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,650,700,750,800
H2_pt               = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,650,700,750,800
JJ_m                = 0,100,200,300,400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,3500,4000

GGFMVA1 = 0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.90,1
GGFMVA2 = 0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.90,1