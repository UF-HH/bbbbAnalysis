[configuration]

# directory='Histos2018'
directory = '/uscms/home/guerrero/nobackup/Run2/HH2020/Spring/CMSSW_10_2_13/src/bbbbAnalysis/MyHistos/Histos2018'

processes=["DATA","MODEL","ggHH_kl_1_kt_1","ggHH_kl_0_kt_1","ggHH_kl_5_kt_1","qqHH_CV_1_C2V_1_kl_1","qqHH_CV_1_C2V_2_kl_1","qqHH_CV_1_C2V_1_kl_2","qqHH_CV_1_C2V_1_kl_0","qqHH_CV_0p5_C2V_1_kl_1","qqHH_CV_1p5_C2V_1_kl_1"]

datas = ["DATA"]

sigs  = ["ggHH_kl_1_kt_1","ggHH_kl_0_kt_1","ggHH_kl_5_kt_1","qqHH_CV_1_C2V_1_kl_1","qqHH_CV_1_C2V_2_kl_1","qqHH_CV_1_C2V_1_kl_2","qqHH_CV_1_C2V_1_kl_0","qqHH_CV_0p5_C2V_1_kl_1","qqHH_CV_1p5_C2V_1_kl_1"]

bkgs  = ['MODEL']

categandobs = [["GGFcateg1","GGFMVA1"],["GGFcateg2","GGFMVA2"],["VBFcateg1","HH_m_1"],["VBFcateg2","HH_m_2"]]

combinations = [["GGFcateg1","GGFcateg2"],["VBFcateg1","VBFcateg2"],["GGFcateg1","GGFcateg2","VBFcateg1","VBFcateg2"]]

folder='physicsmodel2018'

dataset='2018'

datacardname='datacard_2018'

replacements = {
    'DATA'                       : 'data_obs',
    'ggHH_kl_1_kt_1'             : 'ggHH_kl_1_kt_1_4b',
    'ggHH_kl_0_kt_1'             : 'ggHH_kl_0_kt_1_4b',
    'ggHH_kl_5_kt_1'             : 'ggHH_kl_5_kt_1_4b',
    'qqHH_CV_1_C2V_1_kl_1'       : 'qqHH_CV_1_C2V_1_kl_1_4b',
    'qqHH_CV_1_C2V_2_kl_1'       : 'qqHH_CV_1_C2V_2_kl_1_4b',
    'qqHH_CV_1_C2V_1_kl_2'       : 'qqHH_CV_1_C2V_1_kl_2_4b',
    'qqHH_CV_1_C2V_1_kl_0'       : 'qqHH_CV_1_C2V_1_kl_0_4b',
    'qqHH_CV_0p5_C2V_1_kl_1'     : 'qqHH_CV_0p5_C2V_1_kl_1_4b',
    'qqHH_CV_1p5_C2V_1_kl_1'     : 'qqHH_CV_1p5_C2V_1_kl_1_4b'}


[systematics]

### specify name of systematic, [directions], read type, optional renaming
##
## read type : how to fetch the histogram. Predefined:
## - wsyst     (for alternative weights, appended at the end of the histogram name)
## - altsample (for alternative sample, that modifies the name of the process)
## otherwise you can pass a string to call f.Get() that can be formatted in python with '{sample} {selection} {variable} {syst} {direction}'
## - wsyst_nodir will just look for the name with {systematics} and no {direction} within (mostly useful for debug). The list of direction must thus be [None]

## to not parse systematics, just pass an empty list
syst_list = [
    ['PUWeight' ,                  ['up', 'down'], 'wsyst',      'cms_PU'       ],
    ['bTagScaleFactor_bJets' ,     ['up', 'down'], 'wsyst',      'cms_btag_b'   ],
    ['bTagScaleFactor_cJets' ,     ['up', 'down'], 'wsyst',      'cms_btag_c'   ],
    ['bTagScaleFactor_lightJets' , ['up', 'down'], 'wsyst',      'cms_btag_udsg'],
    ###
    ['jer',                        ['up', 'down'], 'altsample'],
    ['bjer',                       ['up', 'down'], 'altsample'],
    ###
    ['AbsoluteMPFBias',            ['up', 'down'], 'altsample'],
    ['AbsoluteScale',              ['up', 'down'], 'altsample'],
    ['AbsoluteStat',               ['up', 'down'], 'altsample'],
    ['FlavorQCD',                  ['up', 'down'], 'altsample'],
    ['Fragmentation',              ['up', 'down'], 'altsample'],
    ['PileUpDataMC',               ['up', 'down'], 'altsample'],
    ['PileUpPtBB',                 ['up', 'down'], 'altsample'],
    ['PileUpPtEC1',                ['up', 'down'], 'altsample'],
    ['PileUpPtEC2',                ['up', 'down'], 'altsample'],
    ['PileUpPtHF',                 ['up', 'down'], 'altsample'],
    ['PileUpPtRef',                ['up', 'down'], 'altsample'],
    ['RelativeFSR',                ['up', 'down'], 'altsample'],
    ['RelativeJEREC1',             ['up', 'down'], 'altsample'],
    ['RelativeJEREC2',             ['up', 'down'], 'altsample'],
    ['RelativeJERHF',              ['up', 'down'], 'altsample'],
    ['RelativePtBB',               ['up', 'down'], 'altsample'],
    ['RelativePtEC1',              ['up', 'down'], 'altsample'],
    ['RelativePtEC2',              ['up', 'down'], 'altsample'],
    ['RelativePtHF',               ['up', 'down'], 'altsample'],
    ['RelativeBal',                ['up', 'down'], 'altsample'],
    ['RelativeSample',             ['up', 'down'], 'altsample'],
    ['RelativeStatEC',             ['up', 'down'], 'altsample'],
    ['RelativeStatFSR',            ['up', 'down'], 'altsample'],
    ['RelativeStatHF',             ['up', 'down'], 'altsample'],
    ['SinglePionECAL',             ['up', 'down'], 'altsample'],
    ['SinglePionHCAL',             ['up', 'down'], 'altsample'],
    ['TimePtEta',                  ['up', 'down'], 'altsample']]
    ###

    ### used for debug of combination
    # ['LHEScaleWeight_var0',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var1',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var2',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var3',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var4',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var5',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var6',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var7',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var8',         [None], 'wsyst_nodir'],
    # ['PSWeight_var0',               [None], 'wsyst_nodir'],
    # ['PSWeight_var1',               [None], 'wsyst_nodir'],
    # ['PSWeight_var2',               [None], 'wsyst_nodir'],
    # ['PSWeight_var3',               [None], 'wsyst_nodir']]


## here define groups of histogram systematics to be combined into a single one
## read_as works as in the sys_list to access all the elements in the group, without the keyword {direction}
## 'combine' defines how the histos are combined
## 'quadrature' : square sum of the positive and negative deltas (separately)
## 'maxmin'     : min and max deviation from nominal

to_combine = [
    {
        'name'    : 'LHE_scale',
        'inputs'  : [
            'LHEScaleWeight_var0',
            'LHEScaleWeight_var1',
            'LHEScaleWeight_var2',
            'LHEScaleWeight_var3',
            'LHEScaleWeight_var4',
            'LHEScaleWeight_var5',
            'LHEScaleWeight_var6',
            'LHEScaleWeight_var7',
            'LHEScaleWeight_var8'],
        'read_as' : 'wsyst',
        'combine' : 'maxmin'},
    {
        'name'    : 'PS_weights',
        'inputs'  : [
            'PSWeight_var0',
            'PSWeight_var1',
            'PSWeight_var2',
            'PSWeight_var3'],
        'read_as' : 'wsyst',
        'combine' : 'quadrature'}]
