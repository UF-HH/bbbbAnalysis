[configuration]

# directory='Histos2018'
directory = '/uscms/home/guerrero/nobackup/Run2/HH2020/Spring/CMSSW_10_2_13/src/bbbbAnalysis/MyHistos/Histos2018'

processes=["DATA","MODEL","ggHH_kl_1_kt_1","ggHH_kl_0_kt_1","ggHH_kl_5_kt_1","qqHH_CV_1_C2V_1_kl_1","qqHH_CV_1_C2V_2_kl_1","qqHH_CV_1_C2V_1_kl_2","qqHH_CV_1_C2V_1_kl_0","qqHH_CV_0p5_C2V_1_kl_1","qqHH_CV_1p5_C2V_1_kl_1"]

datas = ["DATA"]

sigs  = ["ggHH_kl_1_kt_1","ggHH_kl_0_kt_1","ggHH_kl_5_kt_1","qqHH_CV_1_C2V_1_kl_1","qqHH_CV_1_C2V_2_kl_1","qqHH_CV_1_C2V_1_kl_2","qqHH_CV_1_C2V_1_kl_0","qqHH_CV_0p5_C2V_1_kl_1","qqHH_CV_1p5_C2V_1_kl_1"]

bkgs  = ['MODEL']

categandobs = [["GGFcateg1","GGFMVA1"],["GGFcateg2","GGFMVA2"],["VBFcateg1","HH_m_1"],["VBFcateg2","HH_m_2"]]

combinations = [["GGFcateg1","GGFcateg2"],["VBFcateg1","VBFcateg2"],["GGFcateg1","GGFcateg2","VBFcateg1","VBFcateg2"]]

folder='physicsmodel2018'

dataset='2018'

datacardname='datacard_2018'

replacements = {
    'DATA'                       : 'data_obs',
    'ggHH_kl_1_kt_1'             : 'ggHH_kl_1_kt_1_hbbhbb',
    'ggHH_kl_0_kt_1'             : 'ggHH_kl_0_kt_1_hbbhbb',
    'ggHH_kl_5_kt_1'             : 'ggHH_kl_5_kt_1_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_1'       : 'qqHH_CV_1_C2V_1_kl_1_hbbhbb',
    'qqHH_CV_1_C2V_2_kl_1'       : 'qqHH_CV_1_C2V_2_kl_1_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_2'       : 'qqHH_CV_1_C2V_1_kl_2_hbbhbb',
    'qqHH_CV_1_C2V_1_kl_0'       : 'qqHH_CV_1_C2V_1_kl_0_hbbhbb',
    'qqHH_CV_0p5_C2V_1_kl_1'     : 'qqHH_CV_0p5_C2V_1_kl_1_hbbhbb',
    'qqHH_CV_1p5_C2V_1_kl_1'     : 'qqHH_CV_1p5_C2V_1_kl_1_hbbhbb'}


[systematics]

### specify name of systematic, [directions], read type, optional renaming, 
##
## read type : how to fetch the histogram. Predefined:
## - wsyst     (for alternative weights, appended at the end of the histogram name)
## - altsample (for alternative sample, that modifies the name of the process)
## otherwise you can pass a string to call f.Get() that can be formatted in python with '{sample} {selection} {variable} {syst} {direction}'
## - wsyst_nodir will just look for the name with {systematics} and no {direction} within (mostly useful for debug). The list of direction must thus be [None]

## to not parse systematics, just pass an empty list
syst_list = [
    ['PUWeight' ,                  ['up', 'down'], 'wsyst',      'CMS_PU'             ],
    ['bTagScaleFactor_bJets' ,     ['up', 'down'], 'wsyst',      'CMS_eff_b_b_2018'   ],
    ['bTagScaleFactor_cJets' ,     ['up', 'down'], 'wsyst',      'CMS_eff_b_c_2018'   ],
    ['bTagScaleFactor_lightJets' , ['up', 'down'], 'wsyst',      'CMS_eff_b_udsg_2018'],
    ###
    ['jer',                        ['up', 'down'], 'altsample',  'CMS_res_j'],
    ['bjer',                       ['up', 'down'], 'altsample',  'CMS_res_j_breg'],
    ###
    ['AbsoluteMPFBias',            ['up', 'down'], 'altsample',  'CMS_scale_j_AbsoluteMPFBias' ],
    ['AbsoluteScale',              ['up', 'down'], 'altsample',  'CMS_scale_j_AbsoluteScale'   ],
    ['AbsoluteStat',               ['up', 'down'], 'altsample',  'CMS_scale_j_AbsoluteStat'    ],
    ['FlavorQCD',                  ['up', 'down'], 'altsample',  'CMS_scale_j_FlavorQCD'       ],
    ['Fragmentation',              ['up', 'down'], 'altsample',  'CMS_scale_j_Fragmentation'   ],
    ['PileUpDataMC',               ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpDataMC'    ],
    ['PileUpPtBB',                 ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtBB'      ],
    ['PileUpPtEC1',                ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtEC1'     ],
    ['PileUpPtEC2',                ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtEC2'     ],
    ['PileUpPtHF',                 ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtHF'      ],
    ['PileUpPtRef',                ['up', 'down'], 'altsample',  'CMS_scale_j_PileUpPtRef'     ],
    ['RelativeFSR',                ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeFSR'     ],
    ['RelativeJEREC1',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeJEREC1'  ],
    ['RelativeJEREC2',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeJEREC2'  ],
    ['RelativeJERHF',              ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeJERHF'   ],
    ['RelativePtBB',               ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtBB'    ],
    ['RelativePtEC1',              ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtEC1'   ],
    ['RelativePtEC2',              ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtEC2'   ],
    ['RelativePtHF',               ['up', 'down'], 'altsample',  'CMS_scale_j_RelativePtHF'    ],
    ['RelativeBal',                ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeBal'     ],
    ['RelativeSample',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeSample'  ],
    ['RelativeStatEC',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeStatEC'  ],
    ['RelativeStatFSR',            ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeStatFSR' ],
    ['RelativeStatHF',             ['up', 'down'], 'altsample',  'CMS_scale_j_RelativeStatHF'  ],
    ['SinglePionECAL',             ['up', 'down'], 'altsample',  'CMS_scale_j_SinglePionECAL'  ],
    ['SinglePionHCAL',             ['up', 'down'], 'altsample',  'CMS_scale_j_SinglePionHCAL'  ],
    ['TimePtEta',                  ['up', 'down'], 'altsample',  'CMS_scale_j_TimePtEta'       ]]
    ###

    ### used for debug of combination
    # ['LHEScaleWeight_var0',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var1',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var2',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var3',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var4',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var5',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var6',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var7',         [None], 'wsyst_nodir'],
    # ['LHEScaleWeight_var8',         [None], 'wsyst_nodir'],
    # ['PSWeight_var0',               [None], 'wsyst_nodir'],
    # ['PSWeight_var1',               [None], 'wsyst_nodir'],
    # ['PSWeight_var2',               [None], 'wsyst_nodir'],
    # ['PSWeight_var3',               [None], 'wsyst_nodir']]


## here define groups of histogram systematics to be combined into a single one
## read_as works as in the sys_list to access all the elements in the group, without the keyword {direction}
## 'combine' defines how the histos are combined
## 'quadrature' : square sum of the positive and negative deltas (separately)
## 'maxmin'     : min and max deviation from nominal

to_combine = [
    {
        'name'    : 'CMS_LHE_scale',
        'inputs'  : [
            'LHEScaleWeight_var0',
            'LHEScaleWeight_var1',
            'LHEScaleWeight_var2',
            'LHEScaleWeight_var3',
            'LHEScaleWeight_var4',
            'LHEScaleWeight_var5',
            'LHEScaleWeight_var6',
            'LHEScaleWeight_var7',
            'LHEScaleWeight_var8'],
        'read_as' : 'wsyst',
        'combine' : 'maxmin'},
    {
        'name'    : 'CMS_PS_weights',
        'inputs'  : [
            'PSWeight_var0',
            'PSWeight_var1',
            'PSWeight_var2',
            'PSWeight_var3'],
        'read_as' : 'wsyst',
        'combine' : 'quadrature'}]

#######################################################################################
############## list of the systematics that will be put in the datacard

## format : [type, (description1), (description2) ]
##           where (description) = (process affected, value, <optional : category affected>)
## if no <category affected> is passed, the uncertainty is applied to all categories

[datacard_systematics]

## background
CMS_bkgnorm_GGFcateg1           = ['lnN' , ('MODEL*', '1.050', 'GGFcateg1')]
CMS_bkgnorm_GGFcateg2           = ['lnN' , ('MODEL*', '1.050', 'GGFcateg2')]
CMS_bkgnorm_VBFcateg1           = ['lnN' , ('MODEL*', '1.050', 'VBFcateg1')]
CMS_bkgnorm_VBFcateg2           = ['lnN' , ('MODEL*', '1.050', 'VBFcateg2')]

# signal standard
lumi_13TeV_2018              = ['lnN' , ('qqHH_CV_*', '1.025'), ('ggHH_kl_*', '1.025') ]
CMS_trigger_bbbb_2018        = ['lnN' , ('qqHH_CV_*', '1.10'),  ('ggHH_kl_*', '1.10') ]

CMS_eff_b_b_2018             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_eff_b_c_2018             = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_eff_b_udsg_2018          = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

CMS_PU                       = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

CMS_LHE_scale                = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_PS_weights               = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

## jet uncertainties
CMS_scale_j_AbsoluteMPFBias  = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_AbsoluteScale    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_AbsoluteStat     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_FlavorQCD        = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_Fragmentation    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpDataMC     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtBB       = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtEC1      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtEC2      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtHF       = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_PileUpPtRef      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeFSR      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeJEREC1   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeJEREC2   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeJERHF    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtBB     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtEC1    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtEC2    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativePtHF     = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeBal      = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeSample   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeStatEC   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeStatFSR  = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_RelativeStatHF   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_SinglePionECAL   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_SinglePionHCAL   = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_scale_j_TimePtEta        = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
#
CMS_res_j                    = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]
CMS_res_j_breg               = ['fromInput:lnN', ('qqHH_CV_*', None),  ('ggHH_kl_*', None) ]

## theory uncertainties
QCDscale_ggHH                = ['lnN', ('ggHH_kl_*', '0.95/1.022')]
pdf_Higgs_gg                 = ['lnN', ('ggHH_kl_*', '1.03')]
mtop_ggHH                    = ['lnN', ('ggHH_kl_*', '1.026')]

QCDscale_qqHH                = ['lnN', ('qqHH_CV_*', '0.996/1.003')]
pdf_Higgs_qq                 = ['lnN', ('qqHH_CV_*', '1.021')]

BR_decay_hbbhbb              = ['lnN', ('qqHH_CV_*', '1.025'),  ('ggHH_kl_*', '1.025')]


[datacard_groups]
theory = ['QCDscale_ggHH', 'pdf_Higgs_gg', 'mtop_ggHH', 'QCDscale_qqHH', 'pdf_Higgs_qq', 'BR_decay_hbbhbb']