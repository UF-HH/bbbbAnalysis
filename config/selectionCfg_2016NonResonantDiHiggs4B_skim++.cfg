# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists

#########################################################################
#########################################################################
[selections]
######################################################################### 
Baseline   = 1==1
IsoLepVeto = IsolatedMuon_Multiplicity==0 && IsolatedElectron_Multiplicity==0    
VBFcateg   = (BDT1>=0) 
GGFcateg   = !(BDT1>=0)
VBFcut1    = BDT1<0.80
VBFcut2    = BDT1>=0.80
VBFevt     = VBFEvent==1
Inclusive  = 1==1
CR_110 = TMath::Sqrt((H1_m-125)*(H1_m-125)+(H2_m-120)*(H2_m-120)) >= 30 && TMath::Sqrt((H1_m-125)*(H1_m-125)+(H2_m-120)*(H2_m-120)) <= 50
SR_110 = TMath::Sqrt((H1_m-125)*(H1_m-125)+(H2_m-120)*(H2_m-120)) < 30
CR_210 = TMath::Sqrt((H1_m-182)*(H1_m-182)+(H2_m-175)*(H2_m-175)) >= 30 && TMath::Sqrt((H1_m-182)*(H1_m-182)+(H2_m-175)*(H2_m-175)) <= 50
SR_210 = TMath::Sqrt((H1_m-182)*(H1_m-182)+(H2_m-175)*(H2_m-175)) < 30
3btags = nBtag==3
4btags = nBtag==4
Btag3_VBFcateg1_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut1, 3btags
Btag3_VBFcateg1_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut1, 3btags
Btag4_VBFcateg1_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut1, 4btags
Btag4_VBFcateg1_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut1, 4btags
Btag3_VBFcateg1_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut1, 3btags
Btag3_VBFcateg1_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut1, 3btags
Btag4_VBFcateg1_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut1, 4btags
Btag4_VBFcateg1_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut1, 4btags
Btag3_VBFcateg2_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut2, 3btags
Btag3_VBFcateg2_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut2, 3btags
Btag4_VBFcateg2_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, VBFcut2, 4btags
Btag4_VBFcateg2_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, VBFcut2, 4btags
Btag3_VBFcateg2_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut2, 3btags
Btag3_VBFcateg2_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut2, 3btags
Btag4_VBFcateg2_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, VBFcut2, 4btags
Btag4_VBFcateg2_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, VBFcut2, 4btags
Btag3_VBFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, 3btags
Btag3_VBFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, 3btags
Btag4_VBFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, VBFcateg, 4btags
Btag4_VBFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, VBFcateg, 4btags
Btag3_VBFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, 3btags
Btag3_VBFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, 3btags
Btag4_VBFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, VBFcateg, 4btags
Btag4_VBFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, VBFcateg, 4btags
Btag3_GGFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 3btags
Btag3_GGFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 3btags
Btag4_GGFcateg_CR_110 = Baseline, IsoLepVeto, CR_110, GGFcateg, 4btags
Btag4_GGFcateg_SR_110 = Baseline, IsoLepVeto, SR_110, GGFcateg, 4btags
Btag3_GGFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 3btags
Btag3_GGFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 3btags
Btag4_GGFcateg_CR_210 = Baseline, IsoLepVeto, CR_210, GGFcateg, 4btags
Btag4_GGFcateg_SR_210 = Baseline, IsoLepVeto, SR_210, GGFcateg, 4btags
Btag3_GGFcateg = Baseline,IsoLepVeto, GGFcateg, 3btags
Btag3_VBFcateg = Baseline,IsoLepVeto, VBFcateg, 3btags
Btag4_GGFcateg = Baseline,IsoLepVeto, GGFcateg, 4btags
Btag4_VBFcateg = Baseline,IsoLepVeto, VBFcateg, 4btags
Btag4_VBFpre   = Baseline,IsoLepVeto, 4btags, VBFevt
Btag3_VBFpre   = Baseline,IsoLepVeto, 3btags, VBFevt
Btag4          = Baseline,IsoLepVeto, 4btags
Btag3          = Baseline,IsoLepVeto, 3btags
Preselection   = Baseline,IsoLepVeto
Histogram  = 1==1
#########################################################################
[selectionWeights]
Baseline  =  genWeight, PUWeight, XS, bTagScaleFactor_central 
Btag3_VBFcateg1_CR_110 = Weight_AnaVBF
Btag3_VBFcateg1_SR_110 = Weight_AnaVBF
Btag3_VBFcateg1_CR_210 = Weight_ValVBF
Btag3_VBFcateg1_SR_210 = Weight_ValVBF
Btag3_VBFcateg2_CR_110 = Weight_AnaVBF
Btag3_VBFcateg2_SR_110 = Weight_AnaVBF
Btag3_VBFcateg2_CR_210 = Weight_ValVBF
Btag3_VBFcateg2_SR_210 = Weight_ValVBF
Btag3_VBFcateg_CR_110  = Weight_AnaVBF
Btag3_VBFcateg_SR_110  = Weight_AnaVBF
Btag3_VBFcateg_CR_210  = Weight_ValVBF
Btag3_VBFcateg_SR_210  = Weight_ValVBF
Btag3_GGFcateg_CR_110  = Weight_AnaGGF
Btag3_GGFcateg_SR_110  = Weight_AnaGGF,Weight_MVA
Btag3_GGFcateg_CR_210  = Weight_ValGGF
Btag3_GGFcateg_SR_210  = Weight_ValGGF
#########################################################################
#########################################################################
[sampleWeights]
GGHH4B_rew_kl_m_20   = HH_reweight
GGHH4B_rew_kl_m_19   = HH_reweight
GGHH4B_rew_kl_m_18   = HH_reweight
GGHH4B_rew_kl_m_17   = HH_reweight
GGHH4B_rew_kl_m_16   = HH_reweight
GGHH4B_rew_kl_m_15   = HH_reweight
GGHH4B_rew_kl_m_14   = HH_reweight
GGHH4B_rew_kl_m_13   = HH_reweight
GGHH4B_rew_kl_m_12   = HH_reweight
GGHH4B_rew_kl_m_11   = HH_reweight
GGHH4B_rew_kl_m_10   = HH_reweight
GGHH4B_rew_kl_m_9    = HH_reweight
GGHH4B_rew_kl_m_8    = HH_reweight
GGHH4B_rew_kl_m_7    = HH_reweight
GGHH4B_rew_kl_m_6    = HH_reweight
GGHH4B_rew_kl_m_5    = HH_reweight
GGHH4B_rew_kl_m_4    = HH_reweight
GGHH4B_rew_kl_m_3    = HH_reweight
GGHH4B_rew_kl_m_2    = HH_reweight
GGHH4B_rew_kl_m_1    = HH_reweight
GGHH4B_rew_kl_p_0    = HH_reweight
GGHH4B_rew_kl_p_1    = HH_reweight
GGHH4B_rew_kl_p_2    = HH_reweight
GGHH4B_rew_kl_p_3    = HH_reweight
GGHH4B_rew_kl_p_4    = HH_reweight
GGHH4B_rew_kl_p_5    = HH_reweight
GGHH4B_rew_kl_p_6    = HH_reweight
GGHH4B_rew_kl_p_7    = HH_reweight
GGHH4B_rew_kl_p_8    = HH_reweight
GGHH4B_rew_kl_p_9    = HH_reweight
GGHH4B_rew_kl_p_10   = HH_reweight
GGHH4B_rew_kl_p_11   = HH_reweight
GGHH4B_rew_kl_p_12   = HH_reweight
GGHH4B_rew_kl_p_13   = HH_reweight
GGHH4B_rew_kl_p_14   = HH_reweight
GGHH4B_rew_kl_p_15   = HH_reweight
GGHH4B_rew_kl_p_16   = HH_reweight
GGHH4B_rew_kl_p_17   = HH_reweight
GGHH4B_rew_kl_p_18   = HH_reweight
GGHH4B_rew_kl_p_19   = HH_reweight
GGHH4B_rew_kl_p_20   = HH_reweight
#########################################################################
#########################################################################
# define alternative weights to be tested instead of the nominal one
[systematics]
#########################################################################
#########################################################################
# write binning as ROOT declaration: nXbins, xmin, xmax
[histos]
HH_b1_pt            = 30, 0, 600
HH_b2_pt            = 30, 0, 600
HH_b3_pt            = 30, 0, 600
HH_b4_pt            = 30, 0, 600
JJ_j1_pt            = 30, 0, 600
JJ_j2_pt            = 30, 0, 600
HH_b1_eta           = 40, -5, 5
HH_b2_eta           = 40, -5, 5
HH_b3_eta           = 40, -5, 5
HH_b4_eta           = 40, -5, 5
JJ_j1_eta           = 40, -5, 5
JJ_j2_eta           = 40, -5, 5
JJ_j1_location      = 4, 0, 4
JJ_j2_location      = 4, 0, 4
HH_b1_deepCSV       = 10, 0, 1
HH_b2_deepCSV       = 10, 0, 1
HH_b3_deepCSV       = 10, 0, 1
HH_b4_deepJet       = 10, 0, 1
HH_btag_b1_deepJet  = 10, 0, 1
HH_btag_b2_deepJet  = 10, 0, 1
HH_btag_b3_deepJet  = 10, 0, 1
HH_btag_b4_deepJet  = 10, 0, 1
HH_btag_b3_bscore   = 10, 0, 1
HH_btag_b3_bres     = 10, 0, 1
JJ_j1_qgl           = 25, 0, 1
JJ_j2_qgl           = 25, 0, 1
HH_m                = 6,   0, 3000
H1_m                = 10, 50, 250
H2_m                = 10, 50, 250
H1rand_m            = 20, 50, 250
H2rand_m            = 20, 50, 250
JJ_m                = 160, 0, 8000
j1j2_deltaEta       = 50, 0,  10
VBFEvent            = 2,0,2
EventCount          = 2,0,2
VBFEventLocation    = 7,0,7
IsolatedMuon_Multiplicity      = 5,0,5
IsolatedElectron_Multiplicity  = 5,0,5
BDT1                = 30,-1.5,1.5 
BDT2                = 30,-1.5,1.5
BDT3                = 30,-1.5,1.5
H1_eta              = 24, -5, 5
H2_eta              = 24, -5, 5
H1_pt               = 20, 0, 1000
H2_pt               = 20, 0, 1000
H1rand_pt           = 20, 0, 1000
H2rand_pt           = 20, 0, 1000
JJ_eta              = 24, -6, 6
h1h2_deltaEta       = 10, 0, 10
h1h2_deltaPhi       =  7, 0, 3.5
h1j1_deltaR         = 20, 0, 10
h1j2_deltaR         = 20, 0, 10
h2j1_deltaR         = 20, 0, 10
h2j2_deltaR         = 20, 0, 10
j1etaj2eta          = 20, -20, 0
H1_bb_deltaR        = 5, 0, 5
H2_bb_deltaR        = 5, 0, 5
H1_bb_deltaPhi      = 5, 0, 5
H2_bb_deltaPhi      = 5, 0, 5
costh_HH_b1_ggfcm   = 20, -1,1
costh_HH_b2_ggfcm   = 20, -1,1
nJet                = 25, 0,25
nJet_ec             = 25, 0,25
nJet_hf             = 25, 0,25
nPVgood             = 100,0,100
HH_b1_jetId         = 10, 0,10
HH_b2_jetId         = 10, 0,10
HH_b3_jetId         = 10, 0,10
HH_b4_jetId         = 10, 0,10
JJ_j1_jetId         = 10, 0,10
JJ_j2_jetId         = 10, 0,10
HH_b1_puId          = 10, 0,10
HH_b2_puId          = 10, 0,10
HH_b3_puId          = 10, 0,10
HH_b4_puId          = 10, 0,10
JJ_j1_puId          = 10, 0,10
JJ_j2_puId          = 10, 0,10

# write binning as ROOT declaration: nXbins, xmin, xmax, nYbins, ymin, ymax
[histos2D]
BDT1:BDT2    = 20, -1,  1, 20, -1, 1
JJ_m:j1j2_deltaEta   =  160, 0, 8000,  50, 0,  10
H1rand_pt:H2rand_pt  = 30, 0, 600, 30, 0, 600
H1rand_m:H2rand_m    = 100, 0, 250, 100, 0, 250
H1_pt:H2_pt  = 30, 0, 600, 30, 0, 600
H1_m:H2_m    = 100, 0, 250, 100, 0, 250
BDT1:JJ_m    = 20, -1,  1, 160, 0, 8000

# user defined binning: if defined, overrides any definition in [histos]
[binning]
HH_b1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,725,750,775,800
HH_b2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,750,800
HH_b3_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,600,800
HH_b4_pt            = 0,25,50,75,100,125,150,175,200,225,250,800
JJ_j1_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,800
JJ_j2_pt            = 0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575,600,625,650,675,700,800
JJ_m                = 0,500,1000,2000,8000
j1j2_deltaEta       = 0,2,4,6,8,10
h1h2_deltaEta       = 0,2,4,6,8,10
nJet_ec             = 0,4,5,6,10,25
H1_pt               = 0,100,200,300,400,500,1000
H2_pt               = 0,100,200,300,400,500,1000
HH_m                = 0,200,400,600,800,1000,3000
#HH_m                = 0,200,250,300,350,400,450,500,550,600,650,700,750,800,900,1000,1250,1500,2000,3000